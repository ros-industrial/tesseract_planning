name: Code Quality

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 5 * * *'

jobs:
  ci:
    name: ${{ matrix.job_type }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job_type: [codecov, clang-tidy]
        include:
          - job_type: codecov
            env:
              ADDITIONAL_DEBS: 'taskflow libompl-dev'
              TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Debug -DTESSERACT_ENABLE_CODE_COVERAGE=ON"
              AFTER_SCRIPT: 'cd $target_ws && export MAKEFLAGS=ccov-all:${MAKEFLAGS:-} && colcon build --packages-select tesseract_command_language tesseract_motion_planners tesseract_task_composer tesseract_time_parameterization
                             && bash <(curl -s https://codecov.io/bash) -t ff5e009a-3bc9-47ca-9755-6223c7f9aee1 -s $target_ws/build -f *all-merged.info'
          - job_type: clang-tidy
            env:
              ADDITIONAL_DEBS: 'clang-tidy taskflow libompl-dev'
              AFTER_SCRIPT: ""
              NOT_TEST_BUILD: true
              TARGET_CMAKE_ARGS: "-DTESSERACT_ENABLE_CLANG_TIDY=ON -DTESSERACT_ENABLE_TESTING=ON"
    env:
      ROS_DISTRO: false
      DOCKER_IMAGE: ghcr.io/tesseract-robotics/tesseract:focal-master
      UNDERLAY: /root/tesseract-robotics/tesseract_target_ws/install
      PREFIX: ${{ github.repository }}_
      BEFORE_INIT: './.github/workflows/add_sources.sh'
      AFTER_INIT: ''
      UPSTREAM_WORKSPACE: 'dependencies.repos'
      UPSTREAM_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release"
      ROSDEP_SKIP_KEYS: "fcl opw_kinematics ros_industrial_cmake_boilerplate iwyu octomap catkin ompl taskflow descartes_light trajopt trajopt_ifopt trajopt_sco trajopt_sqp ruckig"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Free disk space
        continue-on-error: true
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        continue-on-error: true
        uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.job_type }}/.ccache
          key: ${{ matrix.job_type }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ matrix.job_type }}-ccache-

      - name: Login to Github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build repository
        uses: 'marip8/industrial_ci@2f4c8ab919f0aafddd514e586325defabd2911ea'
        env:  ${{ matrix.env }}
