name: CodeCov

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 5 * * *'

jobs:
  industrial_ci:
    name: CodeCov
    runs-on: ubuntu-latest
    env:
      CI_NAME: CodeCov
      ROS_DISTRO: noetic
      CCACHE_DIR: "/home/runner/work/tesseract_planning/tesseract_planning/CodeCov/.ccache"
      REGISTRY: ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Free disk space
        continue-on-error: true
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        continue-on-error: true
        uses: actions/cache@v1.1.0
        with:
          path: ${{ env.CI_NAME }}/.ccache
          key: ${{ env.CI_NAME }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ env.CI_NAME }}-ccache-

      - name: Login to Github container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build repository
        uses: 'ros-industrial/industrial_ci@master'
        env:
          OS_NAME: ubuntu
          OS_CODE_NAME: focal
          DOCKER_IMAGE: ${{ env.REGISTRY }}/tesseract-robotics/tesseract:${{ env.ROS_DISTRO }}-master
          ROS_REPO: main
          UNDERLAY: /root//tesseract-robotics/tesseract_target_ws/install
          PREFIX: ${{ github.repository }}_
          UPSTREAM_WORKSPACE: 'dependencies.rosinstall'
          UPSTREAM_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release"
          ROSDEP_SKIP_KEYS: "bullet iwyu fcl"
          TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Debug -DTESSERACT_ENABLE_CODE_COVERAGE=ON"
          PARALLEL_BUILDS: 1
          NOT_TEST_BUILD: true
          AFTER_SCRIPT: 'catkin build -w $target_ws --no-deps --verbose tesseract_command_language tesseract_motion_planners tesseract_task_composer tesseract_time_parameterization --make-args ccov-all
                         && bash <(curl -s https://codecov.io/bash) -t ff5e009a-3bc9-47ca-9755-6223c7f9aee1 -s $target_ws/build -f *all-merged.info'
